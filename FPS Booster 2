-- SETTINGS
local ToDisable = {
	Textures = true,
	VisualEffects = true,
	Parts = true,
	Particles = true,
	Sky = true,
	Accessories = true,
	Meshes = true,
	Terrain = true,
	GUIs = true
}

local ToEnable = {
	FullBright = false
}

local TOGGLE_KEY = Enum.KeyCode.RightShift

-- SERVICES
local Lighting = game:GetService("Lighting")
local TestService = game:GetService("TestService")
local Terrain = workspace:FindFirstChildOfClass("Terrain")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- CACHES
local isLowGraphics = false
local ModifiedObjects = {}

-- FUNCTIONS
local function applyLowGraphics()
	local count = 0
	for _, v in ipairs(game:GetDescendants()) do
		if ToDisable.Parts and v:IsA("BasePart") then
			v.Material = Enum.Material.SmoothPlastic
			v.Transparency = 0.8
			v.CastShadow = false
			table.insert(ModifiedObjects, v)
			count += 1

		elseif ToDisable.Particles and (v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire")) then
			v.Enabled = false
			table.insert(ModifiedObjects, v)
			count += 1

		elseif ToDisable.VisualEffects and (v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect")) then
			v.Enabled = false
			table.insert(ModifiedObjects, v)
			count += 1

		elseif ToDisable.Textures and (v:IsA("Decal") or v:IsA("Texture")) then
			v.Texture = ""
			table.insert(ModifiedObjects, v)
			count += 1

		elseif ToDisable.Sky and v:IsA("Sky") then
			v:Destroy()
			count += 1

		elseif ToDisable.Accessories and (v:IsA("Accessory") or v:IsA("Hat")) then
			v:Destroy()
			count += 1

		elseif ToDisable.Meshes and v:IsA("MeshPart") then
			v.Transparency = 1
			table.insert(ModifiedObjects, v)
			count += 1

		elseif ToDisable.GUIs and (v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ScreenGui")) then
			v.Enabled = false
			table.insert(ModifiedObjects, v)
			count += 1
		end
	end

	if ToDisable.Terrain and Terrain then
		Terrain:Clear()
	end

	if ToEnable.FullBright then
		Lighting.FogColor = Color3.new(1, 1, 1)
		Lighting.FogStart = math.huge
		Lighting.FogEnd = math.huge
		Lighting.Ambient = Color3.new(1, 1, 1)
		Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
		Lighting.Brightness = 5
		Lighting.ColorShift_Top = Color3.new(1, 1, 1)
		Lighting.ColorShift_Bottom = Color3.new(1, 1, 1)
	end

	TestService:Message("[LowGraphics] Enabled - "..count.." items modified.")
end

local function resetGraphics()
	for _, v in ipairs(ModifiedObjects) do
		pcall(function()
			if v:IsA("BasePart") then
				v.Transparency = 0
				v.Material = Enum.Material.Plastic
				v.CastShadow = true
			elseif v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire") then
				v.Enabled = true
			elseif v:IsA("Decal") or v:IsA("Texture") then
				-- cannot restore original texture if it was wiped
			elseif v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect") then
				v.Enabled = true
			elseif v:IsA("MeshPart") then
				v.Transparency = 0
			elseif v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ScreenGui") then
				v.Enabled = true
			end
		end)
	end
	ModifiedObjects = {}
	TestService:Message("[LowGraphics] Disabled - Reset visuals.")
end

-- TOGGLE LOGIC
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == TOGGLE_KEY then
		isLowGraphics = not isLowGraphics
		if isLowGraphics then
			applyLowGraphics()
		else
			resetGraphics()
		end
	end
end)
