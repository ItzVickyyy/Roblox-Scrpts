print("Script Successfully Executed")

local UIS = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")

local TOGGLE_KEY = Enum.KeyCode.RightShift
local player = Players.LocalPlayer
local Character = player.Character or player.CharacterAdded:Wait()
local Root = Character:WaitForChild("HumanoidRootPart")

local isFiltered = false
local SCAN_RADIUS = 10
local visibleParts = {}

local function updateVisibility(limitToRadius)
	local origin = Root.Position
	local allParts = Workspace:GetDescendants()

	for i = 1, #allParts do
		local part = allParts[i]
		if part:IsA("BasePart") and part:IsDescendantOf(Workspace) and not part:IsDescendantOf(Character) then
			local dist = (part.Position - origin).Magnitude

			if limitToRadius and dist > SCAN_RADIUS then
				part.LocalTransparencyModifier = 1
			else
				part.LocalTransparencyModifier = 0
			end
		end
	end
end

UIS.InputBegan:Connect(function(input, processed)
	if processed or input.KeyCode ~= TOGGLE_KEY then return end

	isFiltered = not isFiltered
	updateVisibility(isFiltered)
end)
